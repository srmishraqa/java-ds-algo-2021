1. Functional Interfaces - interface having only one abstract method
But can have any no default and static methods Example - Runnable -> FI , run() -> one abstract method

2. Can you create your own Functional Interface? Yes

3.Method referencing ? -> Replacement of Lambda expression which gives code re usability

4.Default Methods in Interface->

Let's say we need have one interface and we are using many classes which implements to that Interface
Now if we add a new abstract method , those classes need to provide implementation by overriding

It will be difficult to manually go and do that for each classes in a complex project.

So we can add default methods to Interface, so that the implementation by default gets used by other classes
and if we don't want the same implementation in any of the class we can provide our own implementation by
overriding the default method in a particular class

5. static methods in interfaces are similar to default methods , but it can not be overridden as the method is static,
So that implementing class can't change the implementation of static methods
And this methods should be called by Interface name

Why we do we need static methods? by allowing a security not to override